using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace GPS.API.Migrations
{
    /// <inheritdoc />
    public partial class New : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Drivers",
                keyColumn: "Id",
                keyValue: 1,
                column: "HireDate",
                value: new DateTime(2024, 11, 25, 17, 31, 42, 135, DateTimeKind.Local).AddTicks(6194));

            migrationBuilder.UpdateData(
                table: "Drivers",
                keyColumn: "Id",
                keyValue: 2,
                column: "HireDate",
                value: new DateTime(2024, 11, 25, 17, 31, 42, 137, DateTimeKind.Local).AddTicks(8318));

            migrationBuilder.UpdateData(
                table: "Managers",
                keyColumn: "Id",
                keyValue: 3,
                column: "HireDate",
                value: new DateTime(2024, 11, 25, 17, 31, 42, 137, DateTimeKind.Local).AddTicks(9125));

            migrationBuilder.UpdateData(
                table: "Managers",
                keyColumn: "Id",
                keyValue: 4,
                column: "HireDate",
                value: new DateTime(2024, 11, 25, 17, 31, 42, 138, DateTimeKind.Local).AddTicks(33));

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 129, 239, 116, 26, 24, 102, 142, 194, 211, 49, 217, 207, 174, 123, 16, 237, 66, 195, 220, 119, 252, 39, 69, 15, 144, 124, 205, 16, 48, 150, 142, 35, 214, 217, 107, 175, 28, 38, 106, 76, 192, 179, 91, 14, 26, 5, 32, 80, 38, 247, 163, 124, 13, 130, 118, 90, 10, 214, 137, 189, 22, 241, 115, 49 }, new byte[] { 98, 172, 48, 116, 95, 203, 108, 1, 224, 199, 159, 129, 67, 46, 182, 136, 135, 198, 175, 247, 201, 53, 252, 123, 71, 147, 16, 112, 233, 11, 200, 201, 177, 173, 228, 141, 247, 166, 137, 19, 80, 64, 24, 235, 239, 140, 209, 171, 50, 67, 26, 43, 80, 69, 166, 148, 95, 129, 7, 240, 18, 133, 43, 33, 97, 55, 142, 184, 8, 123, 8, 169, 106, 216, 190, 27, 235, 105, 186, 234, 186, 35, 213, 55, 129, 102, 79, 201, 236, 125, 41, 11, 64, 120, 228, 95, 7, 164, 254, 143, 190, 114, 138, 53, 106, 200, 56, 79, 86, 96, 104, 109, 142, 181, 83, 33, 89, 193, 65, 14, 59, 87, 158, 243, 69, 106, 195, 201 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 129, 239, 116, 26, 24, 102, 142, 194, 211, 49, 217, 207, 174, 123, 16, 237, 66, 195, 220, 119, 252, 39, 69, 15, 144, 124, 205, 16, 48, 150, 142, 35, 214, 217, 107, 175, 28, 38, 106, 76, 192, 179, 91, 14, 26, 5, 32, 80, 38, 247, 163, 124, 13, 130, 118, 90, 10, 214, 137, 189, 22, 241, 115, 49 }, new byte[] { 98, 172, 48, 116, 95, 203, 108, 1, 224, 199, 159, 129, 67, 46, 182, 136, 135, 198, 175, 247, 201, 53, 252, 123, 71, 147, 16, 112, 233, 11, 200, 201, 177, 173, 228, 141, 247, 166, 137, 19, 80, 64, 24, 235, 239, 140, 209, 171, 50, 67, 26, 43, 80, 69, 166, 148, 95, 129, 7, 240, 18, 133, 43, 33, 97, 55, 142, 184, 8, 123, 8, 169, 106, 216, 190, 27, 235, 105, 186, 234, 186, 35, 213, 55, 129, 102, 79, 201, 236, 125, 41, 11, 64, 120, 228, 95, 7, 164, 254, 143, 190, 114, 138, 53, 106, 200, 56, 79, 86, 96, 104, 109, 142, 181, 83, 33, 89, 193, 65, 14, 59, 87, 158, 243, 69, 106, 195, 201 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 129, 239, 116, 26, 24, 102, 142, 194, 211, 49, 217, 207, 174, 123, 16, 237, 66, 195, 220, 119, 252, 39, 69, 15, 144, 124, 205, 16, 48, 150, 142, 35, 214, 217, 107, 175, 28, 38, 106, 76, 192, 179, 91, 14, 26, 5, 32, 80, 38, 247, 163, 124, 13, 130, 118, 90, 10, 214, 137, 189, 22, 241, 115, 49 }, new byte[] { 98, 172, 48, 116, 95, 203, 108, 1, 224, 199, 159, 129, 67, 46, 182, 136, 135, 198, 175, 247, 201, 53, 252, 123, 71, 147, 16, 112, 233, 11, 200, 201, 177, 173, 228, 141, 247, 166, 137, 19, 80, 64, 24, 235, 239, 140, 209, 171, 50, 67, 26, 43, 80, 69, 166, 148, 95, 129, 7, 240, 18, 133, 43, 33, 97, 55, 142, 184, 8, 123, 8, 169, 106, 216, 190, 27, 235, 105, 186, 234, 186, 35, 213, 55, 129, 102, 79, 201, 236, 125, 41, 11, 64, 120, 228, 95, 7, 164, 254, 143, 190, 114, 138, 53, 106, 200, 56, 79, 86, 96, 104, 109, 142, 181, 83, 33, 89, 193, 65, 14, 59, 87, 158, 243, 69, 106, 195, 201 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 129, 239, 116, 26, 24, 102, 142, 194, 211, 49, 217, 207, 174, 123, 16, 237, 66, 195, 220, 119, 252, 39, 69, 15, 144, 124, 205, 16, 48, 150, 142, 35, 214, 217, 107, 175, 28, 38, 106, 76, 192, 179, 91, 14, 26, 5, 32, 80, 38, 247, 163, 124, 13, 130, 118, 90, 10, 214, 137, 189, 22, 241, 115, 49 }, new byte[] { 98, 172, 48, 116, 95, 203, 108, 1, 224, 199, 159, 129, 67, 46, 182, 136, 135, 198, 175, 247, 201, 53, 252, 123, 71, 147, 16, 112, 233, 11, 200, 201, 177, 173, 228, 141, 247, 166, 137, 19, 80, 64, 24, 235, 239, 140, 209, 171, 50, 67, 26, 43, 80, 69, 166, 148, 95, 129, 7, 240, 18, 133, 43, 33, 97, 55, 142, 184, 8, 123, 8, 169, 106, 216, 190, 27, 235, 105, 186, 234, 186, 35, 213, 55, 129, 102, 79, 201, 236, 125, 41, 11, 64, 120, 228, 95, 7, 164, 254, 143, 190, 114, 138, 53, 106, 200, 56, 79, 86, 96, 104, 109, 142, 181, 83, 33, 89, 193, 65, 14, 59, 87, 158, 243, 69, 106, 195, 201 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 129, 239, 116, 26, 24, 102, 142, 194, 211, 49, 217, 207, 174, 123, 16, 237, 66, 195, 220, 119, 252, 39, 69, 15, 144, 124, 205, 16, 48, 150, 142, 35, 214, 217, 107, 175, 28, 38, 106, 76, 192, 179, 91, 14, 26, 5, 32, 80, 38, 247, 163, 124, 13, 130, 118, 90, 10, 214, 137, 189, 22, 241, 115, 49 }, new byte[] { 98, 172, 48, 116, 95, 203, 108, 1, 224, 199, 159, 129, 67, 46, 182, 136, 135, 198, 175, 247, 201, 53, 252, 123, 71, 147, 16, 112, 233, 11, 200, 201, 177, 173, 228, 141, 247, 166, 137, 19, 80, 64, 24, 235, 239, 140, 209, 171, 50, 67, 26, 43, 80, 69, 166, 148, 95, 129, 7, 240, 18, 133, 43, 33, 97, 55, 142, 184, 8, 123, 8, 169, 106, 216, 190, 27, 235, 105, 186, 234, 186, 35, 213, 55, 129, 102, 79, 201, 236, 125, 41, 11, 64, 120, 228, 95, 7, 164, 254, 143, 190, 114, 138, 53, 106, 200, 56, 79, 86, 96, 104, 109, 142, 181, 83, 33, 89, 193, 65, 14, 59, 87, 158, 243, 69, 106, 195, 201 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 129, 239, 116, 26, 24, 102, 142, 194, 211, 49, 217, 207, 174, 123, 16, 237, 66, 195, 220, 119, 252, 39, 69, 15, 144, 124, 205, 16, 48, 150, 142, 35, 214, 217, 107, 175, 28, 38, 106, 76, 192, 179, 91, 14, 26, 5, 32, 80, 38, 247, 163, 124, 13, 130, 118, 90, 10, 214, 137, 189, 22, 241, 115, 49 }, new byte[] { 98, 172, 48, 116, 95, 203, 108, 1, 224, 199, 159, 129, 67, 46, 182, 136, 135, 198, 175, 247, 201, 53, 252, 123, 71, 147, 16, 112, 233, 11, 200, 201, 177, 173, 228, 141, 247, 166, 137, 19, 80, 64, 24, 235, 239, 140, 209, 171, 50, 67, 26, 43, 80, 69, 166, 148, 95, 129, 7, 240, 18, 133, 43, 33, 97, 55, 142, 184, 8, 123, 8, 169, 106, 216, 190, 27, 235, 105, 186, 234, 186, 35, 213, 55, 129, 102, 79, 201, 236, 125, 41, 11, 64, 120, 228, 95, 7, 164, 254, 143, 190, 114, 138, 53, 106, 200, 56, 79, 86, 96, 104, 109, 142, 181, 83, 33, 89, 193, 65, 14, 59, 87, 158, 243, 69, 106, 195, 201 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Drivers",
                keyColumn: "Id",
                keyValue: 1,
                column: "HireDate",
                value: new DateTime(2024, 11, 25, 17, 20, 3, 443, DateTimeKind.Local).AddTicks(9597));

            migrationBuilder.UpdateData(
                table: "Drivers",
                keyColumn: "Id",
                keyValue: 2,
                column: "HireDate",
                value: new DateTime(2024, 11, 25, 17, 20, 3, 446, DateTimeKind.Local).AddTicks(3299));

            migrationBuilder.UpdateData(
                table: "Managers",
                keyColumn: "Id",
                keyValue: 3,
                column: "HireDate",
                value: new DateTime(2024, 11, 25, 17, 20, 3, 446, DateTimeKind.Local).AddTicks(4219));

            migrationBuilder.UpdateData(
                table: "Managers",
                keyColumn: "Id",
                keyValue: 4,
                column: "HireDate",
                value: new DateTime(2024, 11, 25, 17, 20, 3, 446, DateTimeKind.Local).AddTicks(5749));

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 141, 75, 67, 189, 24, 209, 196, 203, 78, 102, 207, 174, 58, 9, 88, 70, 90, 217, 26, 235, 170, 154, 191, 76, 52, 248, 133, 67, 84, 12, 195, 61, 21, 151, 253, 104, 153, 165, 211, 147, 225, 162, 182, 182, 180, 252, 20, 112, 120, 27, 14, 143, 209, 195, 53, 2, 2, 173, 236, 145, 25, 39, 154, 233 }, new byte[] { 6, 192, 36, 189, 105, 140, 19, 7, 213, 176, 188, 15, 130, 70, 115, 85, 28, 192, 48, 175, 112, 237, 216, 164, 56, 44, 239, 117, 78, 118, 18, 254, 3, 138, 20, 245, 97, 53, 95, 234, 120, 153, 199, 168, 60, 108, 173, 118, 130, 249, 157, 157, 180, 161, 239, 181, 88, 43, 235, 190, 202, 249, 189, 168, 170, 104, 156, 14, 15, 105, 63, 23, 223, 247, 68, 247, 115, 33, 242, 240, 112, 91, 253, 96, 235, 253, 57, 61, 119, 142, 191, 73, 238, 131, 203, 203, 63, 38, 39, 127, 165, 96, 8, 160, 66, 49, 137, 166, 190, 48, 191, 3, 218, 241, 198, 155, 227, 48, 173, 71, 133, 10, 2, 244, 243, 248, 41, 123 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 141, 75, 67, 189, 24, 209, 196, 203, 78, 102, 207, 174, 58, 9, 88, 70, 90, 217, 26, 235, 170, 154, 191, 76, 52, 248, 133, 67, 84, 12, 195, 61, 21, 151, 253, 104, 153, 165, 211, 147, 225, 162, 182, 182, 180, 252, 20, 112, 120, 27, 14, 143, 209, 195, 53, 2, 2, 173, 236, 145, 25, 39, 154, 233 }, new byte[] { 6, 192, 36, 189, 105, 140, 19, 7, 213, 176, 188, 15, 130, 70, 115, 85, 28, 192, 48, 175, 112, 237, 216, 164, 56, 44, 239, 117, 78, 118, 18, 254, 3, 138, 20, 245, 97, 53, 95, 234, 120, 153, 199, 168, 60, 108, 173, 118, 130, 249, 157, 157, 180, 161, 239, 181, 88, 43, 235, 190, 202, 249, 189, 168, 170, 104, 156, 14, 15, 105, 63, 23, 223, 247, 68, 247, 115, 33, 242, 240, 112, 91, 253, 96, 235, 253, 57, 61, 119, 142, 191, 73, 238, 131, 203, 203, 63, 38, 39, 127, 165, 96, 8, 160, 66, 49, 137, 166, 190, 48, 191, 3, 218, 241, 198, 155, 227, 48, 173, 71, 133, 10, 2, 244, 243, 248, 41, 123 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 141, 75, 67, 189, 24, 209, 196, 203, 78, 102, 207, 174, 58, 9, 88, 70, 90, 217, 26, 235, 170, 154, 191, 76, 52, 248, 133, 67, 84, 12, 195, 61, 21, 151, 253, 104, 153, 165, 211, 147, 225, 162, 182, 182, 180, 252, 20, 112, 120, 27, 14, 143, 209, 195, 53, 2, 2, 173, 236, 145, 25, 39, 154, 233 }, new byte[] { 6, 192, 36, 189, 105, 140, 19, 7, 213, 176, 188, 15, 130, 70, 115, 85, 28, 192, 48, 175, 112, 237, 216, 164, 56, 44, 239, 117, 78, 118, 18, 254, 3, 138, 20, 245, 97, 53, 95, 234, 120, 153, 199, 168, 60, 108, 173, 118, 130, 249, 157, 157, 180, 161, 239, 181, 88, 43, 235, 190, 202, 249, 189, 168, 170, 104, 156, 14, 15, 105, 63, 23, 223, 247, 68, 247, 115, 33, 242, 240, 112, 91, 253, 96, 235, 253, 57, 61, 119, 142, 191, 73, 238, 131, 203, 203, 63, 38, 39, 127, 165, 96, 8, 160, 66, 49, 137, 166, 190, 48, 191, 3, 218, 241, 198, 155, 227, 48, 173, 71, 133, 10, 2, 244, 243, 248, 41, 123 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 141, 75, 67, 189, 24, 209, 196, 203, 78, 102, 207, 174, 58, 9, 88, 70, 90, 217, 26, 235, 170, 154, 191, 76, 52, 248, 133, 67, 84, 12, 195, 61, 21, 151, 253, 104, 153, 165, 211, 147, 225, 162, 182, 182, 180, 252, 20, 112, 120, 27, 14, 143, 209, 195, 53, 2, 2, 173, 236, 145, 25, 39, 154, 233 }, new byte[] { 6, 192, 36, 189, 105, 140, 19, 7, 213, 176, 188, 15, 130, 70, 115, 85, 28, 192, 48, 175, 112, 237, 216, 164, 56, 44, 239, 117, 78, 118, 18, 254, 3, 138, 20, 245, 97, 53, 95, 234, 120, 153, 199, 168, 60, 108, 173, 118, 130, 249, 157, 157, 180, 161, 239, 181, 88, 43, 235, 190, 202, 249, 189, 168, 170, 104, 156, 14, 15, 105, 63, 23, 223, 247, 68, 247, 115, 33, 242, 240, 112, 91, 253, 96, 235, 253, 57, 61, 119, 142, 191, 73, 238, 131, 203, 203, 63, 38, 39, 127, 165, 96, 8, 160, 66, 49, 137, 166, 190, 48, 191, 3, 218, 241, 198, 155, 227, 48, 173, 71, 133, 10, 2, 244, 243, 248, 41, 123 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 141, 75, 67, 189, 24, 209, 196, 203, 78, 102, 207, 174, 58, 9, 88, 70, 90, 217, 26, 235, 170, 154, 191, 76, 52, 248, 133, 67, 84, 12, 195, 61, 21, 151, 253, 104, 153, 165, 211, 147, 225, 162, 182, 182, 180, 252, 20, 112, 120, 27, 14, 143, 209, 195, 53, 2, 2, 173, 236, 145, 25, 39, 154, 233 }, new byte[] { 6, 192, 36, 189, 105, 140, 19, 7, 213, 176, 188, 15, 130, 70, 115, 85, 28, 192, 48, 175, 112, 237, 216, 164, 56, 44, 239, 117, 78, 118, 18, 254, 3, 138, 20, 245, 97, 53, 95, 234, 120, 153, 199, 168, 60, 108, 173, 118, 130, 249, 157, 157, 180, 161, 239, 181, 88, 43, 235, 190, 202, 249, 189, 168, 170, 104, 156, 14, 15, 105, 63, 23, 223, 247, 68, 247, 115, 33, 242, 240, 112, 91, 253, 96, 235, 253, 57, 61, 119, 142, 191, 73, 238, 131, 203, 203, 63, 38, 39, 127, 165, 96, 8, 160, 66, 49, 137, 166, 190, 48, 191, 3, 218, 241, 198, 155, 227, 48, 173, 71, 133, 10, 2, 244, 243, 248, 41, 123 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 141, 75, 67, 189, 24, 209, 196, 203, 78, 102, 207, 174, 58, 9, 88, 70, 90, 217, 26, 235, 170, 154, 191, 76, 52, 248, 133, 67, 84, 12, 195, 61, 21, 151, 253, 104, 153, 165, 211, 147, 225, 162, 182, 182, 180, 252, 20, 112, 120, 27, 14, 143, 209, 195, 53, 2, 2, 173, 236, 145, 25, 39, 154, 233 }, new byte[] { 6, 192, 36, 189, 105, 140, 19, 7, 213, 176, 188, 15, 130, 70, 115, 85, 28, 192, 48, 175, 112, 237, 216, 164, 56, 44, 239, 117, 78, 118, 18, 254, 3, 138, 20, 245, 97, 53, 95, 234, 120, 153, 199, 168, 60, 108, 173, 118, 130, 249, 157, 157, 180, 161, 239, 181, 88, 43, 235, 190, 202, 249, 189, 168, 170, 104, 156, 14, 15, 105, 63, 23, 223, 247, 68, 247, 115, 33, 242, 240, 112, 91, 253, 96, 235, 253, 57, 61, 119, 142, 191, 73, 238, 131, 203, 203, 63, 38, 39, 127, 165, 96, 8, 160, 66, 49, 137, 166, 190, 48, 191, 3, 218, 241, 198, 155, 227, 48, 173, 71, 133, 10, 2, 244, 243, 248, 41, 123 } });
        }
    }
}
