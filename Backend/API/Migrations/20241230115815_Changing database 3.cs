using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace GPS.API.Migrations
{
    /// <inheritdoc />
    public partial class Changingdatabase3 : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<string>(
                name: "StripeCustomerId",
                table: "MyAppUsers",
                type: "nvarchar(max)",
                nullable: true);

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt", "StripeCustomerId" },
                values: new object[] { new byte[] { 240, 52, 30, 201, 18, 145, 154, 44, 205, 98, 187, 164, 115, 243, 83, 26, 108, 177, 81, 138, 81, 74, 31, 225, 11, 229, 72, 168, 119, 0, 51, 199, 223, 226, 33, 33, 194, 97, 123, 52, 244, 14, 159, 139, 114, 47, 50, 75, 8, 115, 195, 165, 33, 208, 200, 37, 143, 36, 42, 85, 195, 135, 54, 172 }, new byte[] { 247, 226, 187, 138, 191, 223, 104, 246, 214, 115, 104, 156, 35, 178, 29, 209, 85, 157, 34, 214, 160, 54, 10, 11, 192, 139, 155, 56, 69, 192, 189, 161, 223, 102, 230, 48, 66, 206, 254, 235, 112, 191, 211, 101, 44, 113, 77, 190, 97, 79, 240, 202, 109, 91, 238, 180, 174, 140, 11, 26, 26, 142, 132, 105, 187, 41, 96, 4, 122, 136, 108, 238, 148, 240, 71, 2, 185, 192, 28, 17, 195, 23, 246, 178, 231, 230, 106, 99, 96, 102, 88, 105, 57, 152, 189, 27, 73, 158, 108, 245, 159, 185, 112, 194, 200, 252, 240, 168, 0, 230, 166, 150, 39, 250, 163, 175, 152, 195, 107, 21, 227, 212, 146, 244, 40, 94, 22, 202 }, null });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt", "StripeCustomerId" },
                values: new object[] { new byte[] { 240, 52, 30, 201, 18, 145, 154, 44, 205, 98, 187, 164, 115, 243, 83, 26, 108, 177, 81, 138, 81, 74, 31, 225, 11, 229, 72, 168, 119, 0, 51, 199, 223, 226, 33, 33, 194, 97, 123, 52, 244, 14, 159, 139, 114, 47, 50, 75, 8, 115, 195, 165, 33, 208, 200, 37, 143, 36, 42, 85, 195, 135, 54, 172 }, new byte[] { 247, 226, 187, 138, 191, 223, 104, 246, 214, 115, 104, 156, 35, 178, 29, 209, 85, 157, 34, 214, 160, 54, 10, 11, 192, 139, 155, 56, 69, 192, 189, 161, 223, 102, 230, 48, 66, 206, 254, 235, 112, 191, 211, 101, 44, 113, 77, 190, 97, 79, 240, 202, 109, 91, 238, 180, 174, 140, 11, 26, 26, 142, 132, 105, 187, 41, 96, 4, 122, 136, 108, 238, 148, 240, 71, 2, 185, 192, 28, 17, 195, 23, 246, 178, 231, 230, 106, 99, 96, 102, 88, 105, 57, 152, 189, 27, 73, 158, 108, 245, 159, 185, 112, 194, 200, 252, 240, 168, 0, 230, 166, 150, 39, 250, 163, 175, 152, 195, 107, 21, 227, 212, 146, 244, 40, 94, 22, 202 }, null });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt", "StripeCustomerId" },
                values: new object[] { new byte[] { 240, 52, 30, 201, 18, 145, 154, 44, 205, 98, 187, 164, 115, 243, 83, 26, 108, 177, 81, 138, 81, 74, 31, 225, 11, 229, 72, 168, 119, 0, 51, 199, 223, 226, 33, 33, 194, 97, 123, 52, 244, 14, 159, 139, 114, 47, 50, 75, 8, 115, 195, 165, 33, 208, 200, 37, 143, 36, 42, 85, 195, 135, 54, 172 }, new byte[] { 247, 226, 187, 138, 191, 223, 104, 246, 214, 115, 104, 156, 35, 178, 29, 209, 85, 157, 34, 214, 160, 54, 10, 11, 192, 139, 155, 56, 69, 192, 189, 161, 223, 102, 230, 48, 66, 206, 254, 235, 112, 191, 211, 101, 44, 113, 77, 190, 97, 79, 240, 202, 109, 91, 238, 180, 174, 140, 11, 26, 26, 142, 132, 105, 187, 41, 96, 4, 122, 136, 108, 238, 148, 240, 71, 2, 185, 192, 28, 17, 195, 23, 246, 178, 231, 230, 106, 99, 96, 102, 88, 105, 57, 152, 189, 27, 73, 158, 108, 245, 159, 185, 112, 194, 200, 252, 240, 168, 0, 230, 166, 150, 39, 250, 163, 175, 152, 195, 107, 21, 227, 212, 146, 244, 40, 94, 22, 202 }, null });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt", "StripeCustomerId" },
                values: new object[] { new byte[] { 240, 52, 30, 201, 18, 145, 154, 44, 205, 98, 187, 164, 115, 243, 83, 26, 108, 177, 81, 138, 81, 74, 31, 225, 11, 229, 72, 168, 119, 0, 51, 199, 223, 226, 33, 33, 194, 97, 123, 52, 244, 14, 159, 139, 114, 47, 50, 75, 8, 115, 195, 165, 33, 208, 200, 37, 143, 36, 42, 85, 195, 135, 54, 172 }, new byte[] { 247, 226, 187, 138, 191, 223, 104, 246, 214, 115, 104, 156, 35, 178, 29, 209, 85, 157, 34, 214, 160, 54, 10, 11, 192, 139, 155, 56, 69, 192, 189, 161, 223, 102, 230, 48, 66, 206, 254, 235, 112, 191, 211, 101, 44, 113, 77, 190, 97, 79, 240, 202, 109, 91, 238, 180, 174, 140, 11, 26, 26, 142, 132, 105, 187, 41, 96, 4, 122, 136, 108, 238, 148, 240, 71, 2, 185, 192, 28, 17, 195, 23, 246, 178, 231, 230, 106, 99, 96, 102, 88, 105, 57, 152, 189, 27, 73, 158, 108, 245, 159, 185, 112, 194, 200, 252, 240, 168, 0, 230, 166, 150, 39, 250, 163, 175, 152, 195, 107, 21, 227, 212, 146, 244, 40, 94, 22, 202 }, null });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "PasswordHash", "PasswordSalt", "StripeCustomerId" },
                values: new object[] { new byte[] { 240, 52, 30, 201, 18, 145, 154, 44, 205, 98, 187, 164, 115, 243, 83, 26, 108, 177, 81, 138, 81, 74, 31, 225, 11, 229, 72, 168, 119, 0, 51, 199, 223, 226, 33, 33, 194, 97, 123, 52, 244, 14, 159, 139, 114, 47, 50, 75, 8, 115, 195, 165, 33, 208, 200, 37, 143, 36, 42, 85, 195, 135, 54, 172 }, new byte[] { 247, 226, 187, 138, 191, 223, 104, 246, 214, 115, 104, 156, 35, 178, 29, 209, 85, 157, 34, 214, 160, 54, 10, 11, 192, 139, 155, 56, 69, 192, 189, 161, 223, 102, 230, 48, 66, 206, 254, 235, 112, 191, 211, 101, 44, 113, 77, 190, 97, 79, 240, 202, 109, 91, 238, 180, 174, 140, 11, 26, 26, 142, 132, 105, 187, 41, 96, 4, 122, 136, 108, 238, 148, 240, 71, 2, 185, 192, 28, 17, 195, 23, 246, 178, 231, 230, 106, 99, 96, 102, 88, 105, 57, 152, 189, 27, 73, 158, 108, 245, 159, 185, 112, 194, 200, 252, 240, 168, 0, 230, 166, 150, 39, 250, 163, 175, 152, 195, 107, 21, 227, 212, 146, 244, 40, 94, 22, 202 }, null });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "PasswordHash", "PasswordSalt", "StripeCustomerId" },
                values: new object[] { new byte[] { 240, 52, 30, 201, 18, 145, 154, 44, 205, 98, 187, 164, 115, 243, 83, 26, 108, 177, 81, 138, 81, 74, 31, 225, 11, 229, 72, 168, 119, 0, 51, 199, 223, 226, 33, 33, 194, 97, 123, 52, 244, 14, 159, 139, 114, 47, 50, 75, 8, 115, 195, 165, 33, 208, 200, 37, 143, 36, 42, 85, 195, 135, 54, 172 }, new byte[] { 247, 226, 187, 138, 191, 223, 104, 246, 214, 115, 104, 156, 35, 178, 29, 209, 85, 157, 34, 214, 160, 54, 10, 11, 192, 139, 155, 56, 69, 192, 189, 161, 223, 102, 230, 48, 66, 206, 254, 235, 112, 191, 211, 101, 44, 113, 77, 190, 97, 79, 240, 202, 109, 91, 238, 180, 174, 140, 11, 26, 26, 142, 132, 105, 187, 41, 96, 4, 122, 136, 108, 238, 148, 240, 71, 2, 185, 192, 28, 17, 195, 23, 246, 178, 231, 230, 106, 99, 96, 102, 88, 105, 57, 152, 189, 27, 73, 158, 108, 245, 159, 185, 112, 194, 200, 252, 240, 168, 0, 230, 166, 150, 39, 250, 163, 175, 152, 195, 107, 21, 227, 212, 146, 244, 40, 94, 22, 202 }, null });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropColumn(
                name: "StripeCustomerId",
                table: "MyAppUsers");

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 4, 160, 185, 134, 190, 132, 148, 128, 166, 15, 126, 121, 147, 18, 242, 9, 96, 246, 70, 33, 210, 61, 117, 24, 136, 21, 54, 48, 49, 69, 191, 174, 155, 114, 136, 195, 16, 59, 95, 94, 180, 116, 40, 226, 204, 104, 214, 66, 48, 226, 12, 233, 11, 200, 118, 188, 242, 111, 19, 225, 9, 43, 245, 110 }, new byte[] { 71, 40, 168, 107, 143, 126, 95, 84, 115, 49, 179, 53, 68, 250, 3, 231, 244, 209, 37, 46, 44, 91, 124, 106, 29, 112, 153, 20, 205, 133, 144, 201, 186, 229, 141, 180, 78, 9, 80, 213, 107, 124, 237, 131, 112, 121, 58, 89, 252, 74, 250, 45, 240, 243, 66, 30, 120, 245, 106, 229, 198, 169, 10, 69, 19, 160, 155, 40, 13, 241, 105, 170, 239, 252, 192, 91, 148, 30, 63, 47, 114, 209, 225, 70, 180, 39, 152, 15, 220, 191, 247, 187, 31, 137, 210, 27, 179, 200, 168, 6, 125, 46, 185, 236, 99, 115, 0, 95, 165, 133, 197, 36, 209, 15, 110, 37, 28, 20, 250, 144, 166, 179, 204, 186, 38, 122, 254, 155 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 4, 160, 185, 134, 190, 132, 148, 128, 166, 15, 126, 121, 147, 18, 242, 9, 96, 246, 70, 33, 210, 61, 117, 24, 136, 21, 54, 48, 49, 69, 191, 174, 155, 114, 136, 195, 16, 59, 95, 94, 180, 116, 40, 226, 204, 104, 214, 66, 48, 226, 12, 233, 11, 200, 118, 188, 242, 111, 19, 225, 9, 43, 245, 110 }, new byte[] { 71, 40, 168, 107, 143, 126, 95, 84, 115, 49, 179, 53, 68, 250, 3, 231, 244, 209, 37, 46, 44, 91, 124, 106, 29, 112, 153, 20, 205, 133, 144, 201, 186, 229, 141, 180, 78, 9, 80, 213, 107, 124, 237, 131, 112, 121, 58, 89, 252, 74, 250, 45, 240, 243, 66, 30, 120, 245, 106, 229, 198, 169, 10, 69, 19, 160, 155, 40, 13, 241, 105, 170, 239, 252, 192, 91, 148, 30, 63, 47, 114, 209, 225, 70, 180, 39, 152, 15, 220, 191, 247, 187, 31, 137, 210, 27, 179, 200, 168, 6, 125, 46, 185, 236, 99, 115, 0, 95, 165, 133, 197, 36, 209, 15, 110, 37, 28, 20, 250, 144, 166, 179, 204, 186, 38, 122, 254, 155 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 4, 160, 185, 134, 190, 132, 148, 128, 166, 15, 126, 121, 147, 18, 242, 9, 96, 246, 70, 33, 210, 61, 117, 24, 136, 21, 54, 48, 49, 69, 191, 174, 155, 114, 136, 195, 16, 59, 95, 94, 180, 116, 40, 226, 204, 104, 214, 66, 48, 226, 12, 233, 11, 200, 118, 188, 242, 111, 19, 225, 9, 43, 245, 110 }, new byte[] { 71, 40, 168, 107, 143, 126, 95, 84, 115, 49, 179, 53, 68, 250, 3, 231, 244, 209, 37, 46, 44, 91, 124, 106, 29, 112, 153, 20, 205, 133, 144, 201, 186, 229, 141, 180, 78, 9, 80, 213, 107, 124, 237, 131, 112, 121, 58, 89, 252, 74, 250, 45, 240, 243, 66, 30, 120, 245, 106, 229, 198, 169, 10, 69, 19, 160, 155, 40, 13, 241, 105, 170, 239, 252, 192, 91, 148, 30, 63, 47, 114, 209, 225, 70, 180, 39, 152, 15, 220, 191, 247, 187, 31, 137, 210, 27, 179, 200, 168, 6, 125, 46, 185, 236, 99, 115, 0, 95, 165, 133, 197, 36, 209, 15, 110, 37, 28, 20, 250, 144, 166, 179, 204, 186, 38, 122, 254, 155 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 4, 160, 185, 134, 190, 132, 148, 128, 166, 15, 126, 121, 147, 18, 242, 9, 96, 246, 70, 33, 210, 61, 117, 24, 136, 21, 54, 48, 49, 69, 191, 174, 155, 114, 136, 195, 16, 59, 95, 94, 180, 116, 40, 226, 204, 104, 214, 66, 48, 226, 12, 233, 11, 200, 118, 188, 242, 111, 19, 225, 9, 43, 245, 110 }, new byte[] { 71, 40, 168, 107, 143, 126, 95, 84, 115, 49, 179, 53, 68, 250, 3, 231, 244, 209, 37, 46, 44, 91, 124, 106, 29, 112, 153, 20, 205, 133, 144, 201, 186, 229, 141, 180, 78, 9, 80, 213, 107, 124, 237, 131, 112, 121, 58, 89, 252, 74, 250, 45, 240, 243, 66, 30, 120, 245, 106, 229, 198, 169, 10, 69, 19, 160, 155, 40, 13, 241, 105, 170, 239, 252, 192, 91, 148, 30, 63, 47, 114, 209, 225, 70, 180, 39, 152, 15, 220, 191, 247, 187, 31, 137, 210, 27, 179, 200, 168, 6, 125, 46, 185, 236, 99, 115, 0, 95, 165, 133, 197, 36, 209, 15, 110, 37, 28, 20, 250, 144, 166, 179, 204, 186, 38, 122, 254, 155 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 4, 160, 185, 134, 190, 132, 148, 128, 166, 15, 126, 121, 147, 18, 242, 9, 96, 246, 70, 33, 210, 61, 117, 24, 136, 21, 54, 48, 49, 69, 191, 174, 155, 114, 136, 195, 16, 59, 95, 94, 180, 116, 40, 226, 204, 104, 214, 66, 48, 226, 12, 233, 11, 200, 118, 188, 242, 111, 19, 225, 9, 43, 245, 110 }, new byte[] { 71, 40, 168, 107, 143, 126, 95, 84, 115, 49, 179, 53, 68, 250, 3, 231, 244, 209, 37, 46, 44, 91, 124, 106, 29, 112, 153, 20, 205, 133, 144, 201, 186, 229, 141, 180, 78, 9, 80, 213, 107, 124, 237, 131, 112, 121, 58, 89, 252, 74, 250, 45, 240, 243, 66, 30, 120, 245, 106, 229, 198, 169, 10, 69, 19, 160, 155, 40, 13, 241, 105, 170, 239, 252, 192, 91, 148, 30, 63, 47, 114, 209, 225, 70, 180, 39, 152, 15, 220, 191, 247, 187, 31, 137, 210, 27, 179, 200, 168, 6, 125, 46, 185, 236, 99, 115, 0, 95, 165, 133, 197, 36, 209, 15, 110, 37, 28, 20, 250, 144, 166, 179, 204, 186, 38, 122, 254, 155 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 4, 160, 185, 134, 190, 132, 148, 128, 166, 15, 126, 121, 147, 18, 242, 9, 96, 246, 70, 33, 210, 61, 117, 24, 136, 21, 54, 48, 49, 69, 191, 174, 155, 114, 136, 195, 16, 59, 95, 94, 180, 116, 40, 226, 204, 104, 214, 66, 48, 226, 12, 233, 11, 200, 118, 188, 242, 111, 19, 225, 9, 43, 245, 110 }, new byte[] { 71, 40, 168, 107, 143, 126, 95, 84, 115, 49, 179, 53, 68, 250, 3, 231, 244, 209, 37, 46, 44, 91, 124, 106, 29, 112, 153, 20, 205, 133, 144, 201, 186, 229, 141, 180, 78, 9, 80, 213, 107, 124, 237, 131, 112, 121, 58, 89, 252, 74, 250, 45, 240, 243, 66, 30, 120, 245, 106, 229, 198, 169, 10, 69, 19, 160, 155, 40, 13, 241, 105, 170, 239, 252, 192, 91, 148, 30, 63, 47, 114, 209, 225, 70, 180, 39, 152, 15, 220, 191, 247, 187, 31, 137, 210, 27, 179, 200, 168, 6, 125, 46, 185, 236, 99, 115, 0, 95, 165, 133, 197, 36, 209, 15, 110, 37, 28, 20, 250, 144, 166, 179, 204, 186, 38, 122, 254, 155 } });
        }
    }
}
