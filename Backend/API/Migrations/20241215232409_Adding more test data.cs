using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace GPS.API.Migrations
{
    /// <inheritdoc />
    public partial class Addingmoretestdata : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 126, 217, 45, 94, 120, 182, 82, 213, 168, 61, 190, 9, 205, 25, 27, 136, 120, 107, 3, 179, 224, 41, 71, 194, 9, 117, 149, 151, 204, 65, 249, 76, 193, 5, 185, 8, 31, 53, 89, 178, 58, 189, 244, 189, 79, 255, 133, 65, 32, 219, 247, 51, 241, 130, 91, 128, 219, 250, 141, 50, 218, 226, 236, 216 }, new byte[] { 55, 41, 242, 34, 155, 219, 174, 69, 201, 125, 238, 206, 2, 93, 101, 80, 198, 130, 227, 254, 32, 145, 243, 126, 247, 46, 38, 197, 157, 242, 88, 201, 200, 147, 109, 121, 107, 112, 105, 79, 54, 162, 218, 33, 224, 15, 224, 131, 216, 207, 111, 123, 126, 213, 20, 205, 127, 35, 113, 183, 253, 14, 90, 74, 166, 71, 98, 121, 85, 23, 244, 92, 154, 192, 181, 75, 96, 34, 42, 109, 120, 185, 206, 93, 130, 177, 90, 58, 162, 40, 0, 86, 67, 82, 112, 40, 171, 135, 179, 20, 180, 44, 68, 221, 138, 90, 114, 241, 211, 190, 223, 176, 73, 166, 2, 76, 57, 236, 191, 27, 149, 86, 67, 38, 31, 104, 54, 22 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 126, 217, 45, 94, 120, 182, 82, 213, 168, 61, 190, 9, 205, 25, 27, 136, 120, 107, 3, 179, 224, 41, 71, 194, 9, 117, 149, 151, 204, 65, 249, 76, 193, 5, 185, 8, 31, 53, 89, 178, 58, 189, 244, 189, 79, 255, 133, 65, 32, 219, 247, 51, 241, 130, 91, 128, 219, 250, 141, 50, 218, 226, 236, 216 }, new byte[] { 55, 41, 242, 34, 155, 219, 174, 69, 201, 125, 238, 206, 2, 93, 101, 80, 198, 130, 227, 254, 32, 145, 243, 126, 247, 46, 38, 197, 157, 242, 88, 201, 200, 147, 109, 121, 107, 112, 105, 79, 54, 162, 218, 33, 224, 15, 224, 131, 216, 207, 111, 123, 126, 213, 20, 205, 127, 35, 113, 183, 253, 14, 90, 74, 166, 71, 98, 121, 85, 23, 244, 92, 154, 192, 181, 75, 96, 34, 42, 109, 120, 185, 206, 93, 130, 177, 90, 58, 162, 40, 0, 86, 67, 82, 112, 40, 171, 135, 179, 20, 180, 44, 68, 221, 138, 90, 114, 241, 211, 190, 223, 176, 73, 166, 2, 76, 57, 236, 191, 27, 149, 86, 67, 38, 31, 104, 54, 22 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 126, 217, 45, 94, 120, 182, 82, 213, 168, 61, 190, 9, 205, 25, 27, 136, 120, 107, 3, 179, 224, 41, 71, 194, 9, 117, 149, 151, 204, 65, 249, 76, 193, 5, 185, 8, 31, 53, 89, 178, 58, 189, 244, 189, 79, 255, 133, 65, 32, 219, 247, 51, 241, 130, 91, 128, 219, 250, 141, 50, 218, 226, 236, 216 }, new byte[] { 55, 41, 242, 34, 155, 219, 174, 69, 201, 125, 238, 206, 2, 93, 101, 80, 198, 130, 227, 254, 32, 145, 243, 126, 247, 46, 38, 197, 157, 242, 88, 201, 200, 147, 109, 121, 107, 112, 105, 79, 54, 162, 218, 33, 224, 15, 224, 131, 216, 207, 111, 123, 126, 213, 20, 205, 127, 35, 113, 183, 253, 14, 90, 74, 166, 71, 98, 121, 85, 23, 244, 92, 154, 192, 181, 75, 96, 34, 42, 109, 120, 185, 206, 93, 130, 177, 90, 58, 162, 40, 0, 86, 67, 82, 112, 40, 171, 135, 179, 20, 180, 44, 68, 221, 138, 90, 114, 241, 211, 190, 223, 176, 73, 166, 2, 76, 57, 236, 191, 27, 149, 86, 67, 38, 31, 104, 54, 22 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 126, 217, 45, 94, 120, 182, 82, 213, 168, 61, 190, 9, 205, 25, 27, 136, 120, 107, 3, 179, 224, 41, 71, 194, 9, 117, 149, 151, 204, 65, 249, 76, 193, 5, 185, 8, 31, 53, 89, 178, 58, 189, 244, 189, 79, 255, 133, 65, 32, 219, 247, 51, 241, 130, 91, 128, 219, 250, 141, 50, 218, 226, 236, 216 }, new byte[] { 55, 41, 242, 34, 155, 219, 174, 69, 201, 125, 238, 206, 2, 93, 101, 80, 198, 130, 227, 254, 32, 145, 243, 126, 247, 46, 38, 197, 157, 242, 88, 201, 200, 147, 109, 121, 107, 112, 105, 79, 54, 162, 218, 33, 224, 15, 224, 131, 216, 207, 111, 123, 126, 213, 20, 205, 127, 35, 113, 183, 253, 14, 90, 74, 166, 71, 98, 121, 85, 23, 244, 92, 154, 192, 181, 75, 96, 34, 42, 109, 120, 185, 206, 93, 130, 177, 90, 58, 162, 40, 0, 86, 67, 82, 112, 40, 171, 135, 179, 20, 180, 44, 68, 221, 138, 90, 114, 241, 211, 190, 223, 176, 73, 166, 2, 76, 57, 236, 191, 27, 149, 86, 67, 38, 31, 104, 54, 22 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 126, 217, 45, 94, 120, 182, 82, 213, 168, 61, 190, 9, 205, 25, 27, 136, 120, 107, 3, 179, 224, 41, 71, 194, 9, 117, 149, 151, 204, 65, 249, 76, 193, 5, 185, 8, 31, 53, 89, 178, 58, 189, 244, 189, 79, 255, 133, 65, 32, 219, 247, 51, 241, 130, 91, 128, 219, 250, 141, 50, 218, 226, 236, 216 }, new byte[] { 55, 41, 242, 34, 155, 219, 174, 69, 201, 125, 238, 206, 2, 93, 101, 80, 198, 130, 227, 254, 32, 145, 243, 126, 247, 46, 38, 197, 157, 242, 88, 201, 200, 147, 109, 121, 107, 112, 105, 79, 54, 162, 218, 33, 224, 15, 224, 131, 216, 207, 111, 123, 126, 213, 20, 205, 127, 35, 113, 183, 253, 14, 90, 74, 166, 71, 98, 121, 85, 23, 244, 92, 154, 192, 181, 75, 96, 34, 42, 109, 120, 185, 206, 93, 130, 177, 90, 58, 162, 40, 0, 86, 67, 82, 112, 40, 171, 135, 179, 20, 180, 44, 68, 221, 138, 90, 114, 241, 211, 190, 223, 176, 73, 166, 2, 76, 57, 236, 191, 27, 149, 86, 67, 38, 31, 104, 54, 22 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 126, 217, 45, 94, 120, 182, 82, 213, 168, 61, 190, 9, 205, 25, 27, 136, 120, 107, 3, 179, 224, 41, 71, 194, 9, 117, 149, 151, 204, 65, 249, 76, 193, 5, 185, 8, 31, 53, 89, 178, 58, 189, 244, 189, 79, 255, 133, 65, 32, 219, 247, 51, 241, 130, 91, 128, 219, 250, 141, 50, 218, 226, 236, 216 }, new byte[] { 55, 41, 242, 34, 155, 219, 174, 69, 201, 125, 238, 206, 2, 93, 101, 80, 198, 130, 227, 254, 32, 145, 243, 126, 247, 46, 38, 197, 157, 242, 88, 201, 200, 147, 109, 121, 107, 112, 105, 79, 54, 162, 218, 33, 224, 15, 224, 131, 216, 207, 111, 123, 126, 213, 20, 205, 127, 35, 113, 183, 253, 14, 90, 74, 166, 71, 98, 121, 85, 23, 244, 92, 154, 192, 181, 75, 96, 34, 42, 109, 120, 185, 206, 93, 130, 177, 90, 58, 162, 40, 0, 86, 67, 82, 112, 40, 171, 135, 179, 20, 180, 44, 68, 221, 138, 90, 114, 241, 211, 190, 223, 176, 73, 166, 2, 76, 57, 236, 191, 27, 149, 86, 67, 38, 31, 104, 54, 22 } });

            migrationBuilder.UpdateData(
                table: "Zones",
                keyColumn: "Id",
                keyValue: 1,
                column: "TenantId",
                value: "mostar");

            migrationBuilder.UpdateData(
                table: "Zones",
                keyColumn: "Id",
                keyValue: 2,
                column: "TenantId",
                value: "mostar");

            migrationBuilder.UpdateData(
                table: "Zones",
                keyColumn: "Id",
                keyValue: 3,
                column: "TenantId",
                value: "mostar");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 109, 185, 101, 142, 43, 107, 53, 9, 203, 104, 234, 164, 188, 84, 197, 8, 251, 78, 99, 174, 53, 194, 99, 108, 204, 200, 80, 166, 221, 211, 75, 63, 152, 103, 211, 85, 2, 16, 102, 103, 17, 13, 34, 223, 97, 196, 88, 193, 67, 113, 139, 203, 176, 235, 213, 227, 249, 204, 144, 208, 125, 218, 250, 9 }, new byte[] { 218, 10, 47, 252, 253, 255, 70, 13, 8, 235, 212, 209, 208, 5, 61, 122, 215, 202, 152, 153, 243, 242, 23, 196, 15, 170, 170, 139, 0, 244, 220, 178, 120, 88, 100, 127, 143, 255, 68, 119, 83, 7, 66, 166, 27, 23, 80, 125, 9, 46, 145, 156, 243, 22, 83, 211, 8, 35, 170, 35, 114, 19, 164, 195, 105, 203, 237, 224, 179, 35, 220, 241, 6, 219, 70, 182, 106, 219, 14, 56, 79, 237, 134, 178, 157, 99, 156, 56, 195, 139, 63, 33, 215, 198, 168, 150, 145, 204, 234, 244, 70, 239, 140, 47, 49, 237, 81, 95, 152, 175, 249, 10, 92, 210, 136, 94, 25, 200, 66, 122, 143, 43, 169, 180, 224, 255, 82, 155 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 109, 185, 101, 142, 43, 107, 53, 9, 203, 104, 234, 164, 188, 84, 197, 8, 251, 78, 99, 174, 53, 194, 99, 108, 204, 200, 80, 166, 221, 211, 75, 63, 152, 103, 211, 85, 2, 16, 102, 103, 17, 13, 34, 223, 97, 196, 88, 193, 67, 113, 139, 203, 176, 235, 213, 227, 249, 204, 144, 208, 125, 218, 250, 9 }, new byte[] { 218, 10, 47, 252, 253, 255, 70, 13, 8, 235, 212, 209, 208, 5, 61, 122, 215, 202, 152, 153, 243, 242, 23, 196, 15, 170, 170, 139, 0, 244, 220, 178, 120, 88, 100, 127, 143, 255, 68, 119, 83, 7, 66, 166, 27, 23, 80, 125, 9, 46, 145, 156, 243, 22, 83, 211, 8, 35, 170, 35, 114, 19, 164, 195, 105, 203, 237, 224, 179, 35, 220, 241, 6, 219, 70, 182, 106, 219, 14, 56, 79, 237, 134, 178, 157, 99, 156, 56, 195, 139, 63, 33, 215, 198, 168, 150, 145, 204, 234, 244, 70, 239, 140, 47, 49, 237, 81, 95, 152, 175, 249, 10, 92, 210, 136, 94, 25, 200, 66, 122, 143, 43, 169, 180, 224, 255, 82, 155 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 109, 185, 101, 142, 43, 107, 53, 9, 203, 104, 234, 164, 188, 84, 197, 8, 251, 78, 99, 174, 53, 194, 99, 108, 204, 200, 80, 166, 221, 211, 75, 63, 152, 103, 211, 85, 2, 16, 102, 103, 17, 13, 34, 223, 97, 196, 88, 193, 67, 113, 139, 203, 176, 235, 213, 227, 249, 204, 144, 208, 125, 218, 250, 9 }, new byte[] { 218, 10, 47, 252, 253, 255, 70, 13, 8, 235, 212, 209, 208, 5, 61, 122, 215, 202, 152, 153, 243, 242, 23, 196, 15, 170, 170, 139, 0, 244, 220, 178, 120, 88, 100, 127, 143, 255, 68, 119, 83, 7, 66, 166, 27, 23, 80, 125, 9, 46, 145, 156, 243, 22, 83, 211, 8, 35, 170, 35, 114, 19, 164, 195, 105, 203, 237, 224, 179, 35, 220, 241, 6, 219, 70, 182, 106, 219, 14, 56, 79, 237, 134, 178, 157, 99, 156, 56, 195, 139, 63, 33, 215, 198, 168, 150, 145, 204, 234, 244, 70, 239, 140, 47, 49, 237, 81, 95, 152, 175, 249, 10, 92, 210, 136, 94, 25, 200, 66, 122, 143, 43, 169, 180, 224, 255, 82, 155 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 109, 185, 101, 142, 43, 107, 53, 9, 203, 104, 234, 164, 188, 84, 197, 8, 251, 78, 99, 174, 53, 194, 99, 108, 204, 200, 80, 166, 221, 211, 75, 63, 152, 103, 211, 85, 2, 16, 102, 103, 17, 13, 34, 223, 97, 196, 88, 193, 67, 113, 139, 203, 176, 235, 213, 227, 249, 204, 144, 208, 125, 218, 250, 9 }, new byte[] { 218, 10, 47, 252, 253, 255, 70, 13, 8, 235, 212, 209, 208, 5, 61, 122, 215, 202, 152, 153, 243, 242, 23, 196, 15, 170, 170, 139, 0, 244, 220, 178, 120, 88, 100, 127, 143, 255, 68, 119, 83, 7, 66, 166, 27, 23, 80, 125, 9, 46, 145, 156, 243, 22, 83, 211, 8, 35, 170, 35, 114, 19, 164, 195, 105, 203, 237, 224, 179, 35, 220, 241, 6, 219, 70, 182, 106, 219, 14, 56, 79, 237, 134, 178, 157, 99, 156, 56, 195, 139, 63, 33, 215, 198, 168, 150, 145, 204, 234, 244, 70, 239, 140, 47, 49, 237, 81, 95, 152, 175, 249, 10, 92, 210, 136, 94, 25, 200, 66, 122, 143, 43, 169, 180, 224, 255, 82, 155 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 109, 185, 101, 142, 43, 107, 53, 9, 203, 104, 234, 164, 188, 84, 197, 8, 251, 78, 99, 174, 53, 194, 99, 108, 204, 200, 80, 166, 221, 211, 75, 63, 152, 103, 211, 85, 2, 16, 102, 103, 17, 13, 34, 223, 97, 196, 88, 193, 67, 113, 139, 203, 176, 235, 213, 227, 249, 204, 144, 208, 125, 218, 250, 9 }, new byte[] { 218, 10, 47, 252, 253, 255, 70, 13, 8, 235, 212, 209, 208, 5, 61, 122, 215, 202, 152, 153, 243, 242, 23, 196, 15, 170, 170, 139, 0, 244, 220, 178, 120, 88, 100, 127, 143, 255, 68, 119, 83, 7, 66, 166, 27, 23, 80, 125, 9, 46, 145, 156, 243, 22, 83, 211, 8, 35, 170, 35, 114, 19, 164, 195, 105, 203, 237, 224, 179, 35, 220, 241, 6, 219, 70, 182, 106, 219, 14, 56, 79, 237, 134, 178, 157, 99, 156, 56, 195, 139, 63, 33, 215, 198, 168, 150, 145, 204, 234, 244, 70, 239, 140, 47, 49, 237, 81, 95, 152, 175, 249, 10, 92, 210, 136, 94, 25, 200, 66, 122, 143, 43, 169, 180, 224, 255, 82, 155 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 109, 185, 101, 142, 43, 107, 53, 9, 203, 104, 234, 164, 188, 84, 197, 8, 251, 78, 99, 174, 53, 194, 99, 108, 204, 200, 80, 166, 221, 211, 75, 63, 152, 103, 211, 85, 2, 16, 102, 103, 17, 13, 34, 223, 97, 196, 88, 193, 67, 113, 139, 203, 176, 235, 213, 227, 249, 204, 144, 208, 125, 218, 250, 9 }, new byte[] { 218, 10, 47, 252, 253, 255, 70, 13, 8, 235, 212, 209, 208, 5, 61, 122, 215, 202, 152, 153, 243, 242, 23, 196, 15, 170, 170, 139, 0, 244, 220, 178, 120, 88, 100, 127, 143, 255, 68, 119, 83, 7, 66, 166, 27, 23, 80, 125, 9, 46, 145, 156, 243, 22, 83, 211, 8, 35, 170, 35, 114, 19, 164, 195, 105, 203, 237, 224, 179, 35, 220, 241, 6, 219, 70, 182, 106, 219, 14, 56, 79, 237, 134, 178, 157, 99, 156, 56, 195, 139, 63, 33, 215, 198, 168, 150, 145, 204, 234, 244, 70, 239, 140, 47, 49, 237, 81, 95, 152, 175, 249, 10, 92, 210, 136, 94, 25, 200, 66, 122, 143, 43, 169, 180, 224, 255, 82, 155 } });

            migrationBuilder.UpdateData(
                table: "Zones",
                keyColumn: "Id",
                keyValue: 1,
                column: "TenantId",
                value: null);

            migrationBuilder.UpdateData(
                table: "Zones",
                keyColumn: "Id",
                keyValue: 2,
                column: "TenantId",
                value: null);

            migrationBuilder.UpdateData(
                table: "Zones",
                keyColumn: "Id",
                keyValue: 3,
                column: "TenantId",
                value: null);
        }
    }
}
