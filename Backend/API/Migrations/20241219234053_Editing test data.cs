using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace GPS.API.Migrations
{
    /// <inheritdoc />
    public partial class Editingtestdata : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 118, 51, 64, 124, 88, 67, 219, 153, 123, 222, 49, 235, 255, 52, 175, 76, 195, 109, 199, 153, 155, 130, 205, 62, 176, 7, 91, 53, 121, 20, 54, 246, 239, 143, 70, 235, 238, 4, 192, 80, 220, 135, 45, 116, 113, 135, 231, 154, 67, 151, 93, 3, 101, 202, 185, 249, 120, 179, 53, 227, 233, 119, 72, 111 }, new byte[] { 141, 71, 150, 161, 1, 133, 98, 131, 248, 227, 112, 112, 220, 178, 102, 107, 119, 31, 58, 69, 102, 246, 166, 138, 34, 20, 197, 110, 221, 11, 219, 84, 81, 186, 207, 144, 184, 13, 117, 21, 0, 32, 255, 254, 15, 198, 75, 196, 181, 224, 83, 176, 101, 107, 174, 18, 52, 164, 155, 217, 170, 207, 44, 95, 254, 188, 109, 10, 203, 78, 170, 178, 43, 54, 241, 155, 124, 167, 3, 70, 216, 58, 65, 155, 168, 115, 42, 58, 59, 23, 243, 214, 9, 243, 38, 192, 86, 128, 223, 46, 1, 38, 138, 167, 131, 84, 253, 232, 101, 148, 229, 175, 71, 71, 162, 26, 37, 135, 219, 159, 145, 47, 187, 90, 55, 136, 31, 114 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 118, 51, 64, 124, 88, 67, 219, 153, 123, 222, 49, 235, 255, 52, 175, 76, 195, 109, 199, 153, 155, 130, 205, 62, 176, 7, 91, 53, 121, 20, 54, 246, 239, 143, 70, 235, 238, 4, 192, 80, 220, 135, 45, 116, 113, 135, 231, 154, 67, 151, 93, 3, 101, 202, 185, 249, 120, 179, 53, 227, 233, 119, 72, 111 }, new byte[] { 141, 71, 150, 161, 1, 133, 98, 131, 248, 227, 112, 112, 220, 178, 102, 107, 119, 31, 58, 69, 102, 246, 166, 138, 34, 20, 197, 110, 221, 11, 219, 84, 81, 186, 207, 144, 184, 13, 117, 21, 0, 32, 255, 254, 15, 198, 75, 196, 181, 224, 83, 176, 101, 107, 174, 18, 52, 164, 155, 217, 170, 207, 44, 95, 254, 188, 109, 10, 203, 78, 170, 178, 43, 54, 241, 155, 124, 167, 3, 70, 216, 58, 65, 155, 168, 115, 42, 58, 59, 23, 243, 214, 9, 243, 38, 192, 86, 128, 223, 46, 1, 38, 138, 167, 131, 84, 253, 232, 101, 148, 229, 175, 71, 71, 162, 26, 37, 135, 219, 159, 145, 47, 187, 90, 55, 136, 31, 114 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 118, 51, 64, 124, 88, 67, 219, 153, 123, 222, 49, 235, 255, 52, 175, 76, 195, 109, 199, 153, 155, 130, 205, 62, 176, 7, 91, 53, 121, 20, 54, 246, 239, 143, 70, 235, 238, 4, 192, 80, 220, 135, 45, 116, 113, 135, 231, 154, 67, 151, 93, 3, 101, 202, 185, 249, 120, 179, 53, 227, 233, 119, 72, 111 }, new byte[] { 141, 71, 150, 161, 1, 133, 98, 131, 248, 227, 112, 112, 220, 178, 102, 107, 119, 31, 58, 69, 102, 246, 166, 138, 34, 20, 197, 110, 221, 11, 219, 84, 81, 186, 207, 144, 184, 13, 117, 21, 0, 32, 255, 254, 15, 198, 75, 196, 181, 224, 83, 176, 101, 107, 174, 18, 52, 164, 155, 217, 170, 207, 44, 95, 254, 188, 109, 10, 203, 78, 170, 178, 43, 54, 241, 155, 124, 167, 3, 70, 216, 58, 65, 155, 168, 115, 42, 58, 59, 23, 243, 214, 9, 243, 38, 192, 86, 128, 223, 46, 1, 38, 138, 167, 131, 84, 253, 232, 101, 148, 229, 175, 71, 71, 162, 26, 37, 135, 219, 159, 145, 47, 187, 90, 55, 136, 31, 114 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 118, 51, 64, 124, 88, 67, 219, 153, 123, 222, 49, 235, 255, 52, 175, 76, 195, 109, 199, 153, 155, 130, 205, 62, 176, 7, 91, 53, 121, 20, 54, 246, 239, 143, 70, 235, 238, 4, 192, 80, 220, 135, 45, 116, 113, 135, 231, 154, 67, 151, 93, 3, 101, 202, 185, 249, 120, 179, 53, 227, 233, 119, 72, 111 }, new byte[] { 141, 71, 150, 161, 1, 133, 98, 131, 248, 227, 112, 112, 220, 178, 102, 107, 119, 31, 58, 69, 102, 246, 166, 138, 34, 20, 197, 110, 221, 11, 219, 84, 81, 186, 207, 144, 184, 13, 117, 21, 0, 32, 255, 254, 15, 198, 75, 196, 181, 224, 83, 176, 101, 107, 174, 18, 52, 164, 155, 217, 170, 207, 44, 95, 254, 188, 109, 10, 203, 78, 170, 178, 43, 54, 241, 155, 124, 167, 3, 70, 216, 58, 65, 155, 168, 115, 42, 58, 59, 23, 243, 214, 9, 243, 38, 192, 86, 128, 223, 46, 1, 38, 138, 167, 131, 84, 253, 232, 101, 148, 229, 175, 71, 71, 162, 26, 37, 135, 219, 159, 145, 47, 187, 90, 55, 136, 31, 114 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 118, 51, 64, 124, 88, 67, 219, 153, 123, 222, 49, 235, 255, 52, 175, 76, 195, 109, 199, 153, 155, 130, 205, 62, 176, 7, 91, 53, 121, 20, 54, 246, 239, 143, 70, 235, 238, 4, 192, 80, 220, 135, 45, 116, 113, 135, 231, 154, 67, 151, 93, 3, 101, 202, 185, 249, 120, 179, 53, 227, 233, 119, 72, 111 }, new byte[] { 141, 71, 150, 161, 1, 133, 98, 131, 248, 227, 112, 112, 220, 178, 102, 107, 119, 31, 58, 69, 102, 246, 166, 138, 34, 20, 197, 110, 221, 11, 219, 84, 81, 186, 207, 144, 184, 13, 117, 21, 0, 32, 255, 254, 15, 198, 75, 196, 181, 224, 83, 176, 101, 107, 174, 18, 52, 164, 155, 217, 170, 207, 44, 95, 254, 188, 109, 10, 203, 78, 170, 178, 43, 54, 241, 155, 124, 167, 3, 70, 216, 58, 65, 155, 168, 115, 42, 58, 59, 23, 243, 214, 9, 243, 38, 192, 86, 128, 223, 46, 1, 38, 138, 167, 131, 84, 253, 232, 101, 148, 229, 175, 71, 71, 162, 26, 37, 135, 219, 159, 145, 47, 187, 90, 55, 136, 31, 114 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 118, 51, 64, 124, 88, 67, 219, 153, 123, 222, 49, 235, 255, 52, 175, 76, 195, 109, 199, 153, 155, 130, 205, 62, 176, 7, 91, 53, 121, 20, 54, 246, 239, 143, 70, 235, 238, 4, 192, 80, 220, 135, 45, 116, 113, 135, 231, 154, 67, 151, 93, 3, 101, 202, 185, 249, 120, 179, 53, 227, 233, 119, 72, 111 }, new byte[] { 141, 71, 150, 161, 1, 133, 98, 131, 248, 227, 112, 112, 220, 178, 102, 107, 119, 31, 58, 69, 102, 246, 166, 138, 34, 20, 197, 110, 221, 11, 219, 84, 81, 186, 207, 144, 184, 13, 117, 21, 0, 32, 255, 254, 15, 198, 75, 196, 181, 224, 83, 176, 101, 107, 174, 18, 52, 164, 155, 217, 170, 207, 44, 95, 254, 188, 109, 10, 203, 78, 170, 178, 43, 54, 241, 155, 124, 167, 3, 70, 216, 58, 65, 155, 168, 115, 42, 58, 59, 23, 243, 214, 9, 243, 38, 192, 86, 128, 223, 46, 1, 38, 138, 167, 131, 84, 253, 232, 101, 148, 229, 175, 71, 71, 162, 26, 37, 135, 219, 159, 145, 47, 187, 90, 55, 136, 31, 114 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 7, 183, 199, 54, 242, 12, 203, 96, 249, 32, 10, 13, 179, 184, 93, 159, 192, 59, 169, 224, 47, 42, 153, 140, 157, 138, 192, 21, 218, 72, 129, 230, 213, 251, 216, 140, 254, 206, 91, 134, 253, 129, 253, 208, 57, 36, 214, 10, 186, 143, 9, 133, 79, 92, 205, 11, 212, 17, 101, 86, 16, 104, 109, 47 }, new byte[] { 74, 206, 48, 149, 53, 32, 69, 3, 205, 249, 131, 204, 107, 179, 123, 101, 68, 246, 140, 249, 205, 200, 187, 153, 130, 12, 105, 85, 7, 131, 194, 145, 64, 234, 168, 39, 229, 211, 146, 50, 54, 150, 19, 3, 169, 8, 202, 212, 25, 173, 178, 240, 43, 136, 34, 225, 202, 201, 244, 56, 146, 56, 198, 124, 13, 39, 183, 71, 191, 177, 236, 72, 100, 251, 30, 134, 71, 122, 30, 152, 206, 242, 240, 165, 14, 39, 238, 7, 107, 76, 122, 31, 95, 213, 103, 135, 239, 254, 94, 77, 40, 107, 32, 138, 72, 187, 93, 62, 140, 167, 41, 215, 248, 168, 114, 73, 85, 137, 213, 19, 209, 232, 73, 246, 125, 198, 2, 140 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 7, 183, 199, 54, 242, 12, 203, 96, 249, 32, 10, 13, 179, 184, 93, 159, 192, 59, 169, 224, 47, 42, 153, 140, 157, 138, 192, 21, 218, 72, 129, 230, 213, 251, 216, 140, 254, 206, 91, 134, 253, 129, 253, 208, 57, 36, 214, 10, 186, 143, 9, 133, 79, 92, 205, 11, 212, 17, 101, 86, 16, 104, 109, 47 }, new byte[] { 74, 206, 48, 149, 53, 32, 69, 3, 205, 249, 131, 204, 107, 179, 123, 101, 68, 246, 140, 249, 205, 200, 187, 153, 130, 12, 105, 85, 7, 131, 194, 145, 64, 234, 168, 39, 229, 211, 146, 50, 54, 150, 19, 3, 169, 8, 202, 212, 25, 173, 178, 240, 43, 136, 34, 225, 202, 201, 244, 56, 146, 56, 198, 124, 13, 39, 183, 71, 191, 177, 236, 72, 100, 251, 30, 134, 71, 122, 30, 152, 206, 242, 240, 165, 14, 39, 238, 7, 107, 76, 122, 31, 95, 213, 103, 135, 239, 254, 94, 77, 40, 107, 32, 138, 72, 187, 93, 62, 140, 167, 41, 215, 248, 168, 114, 73, 85, 137, 213, 19, 209, 232, 73, 246, 125, 198, 2, 140 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 7, 183, 199, 54, 242, 12, 203, 96, 249, 32, 10, 13, 179, 184, 93, 159, 192, 59, 169, 224, 47, 42, 153, 140, 157, 138, 192, 21, 218, 72, 129, 230, 213, 251, 216, 140, 254, 206, 91, 134, 253, 129, 253, 208, 57, 36, 214, 10, 186, 143, 9, 133, 79, 92, 205, 11, 212, 17, 101, 86, 16, 104, 109, 47 }, new byte[] { 74, 206, 48, 149, 53, 32, 69, 3, 205, 249, 131, 204, 107, 179, 123, 101, 68, 246, 140, 249, 205, 200, 187, 153, 130, 12, 105, 85, 7, 131, 194, 145, 64, 234, 168, 39, 229, 211, 146, 50, 54, 150, 19, 3, 169, 8, 202, 212, 25, 173, 178, 240, 43, 136, 34, 225, 202, 201, 244, 56, 146, 56, 198, 124, 13, 39, 183, 71, 191, 177, 236, 72, 100, 251, 30, 134, 71, 122, 30, 152, 206, 242, 240, 165, 14, 39, 238, 7, 107, 76, 122, 31, 95, 213, 103, 135, 239, 254, 94, 77, 40, 107, 32, 138, 72, 187, 93, 62, 140, 167, 41, 215, 248, 168, 114, 73, 85, 137, 213, 19, 209, 232, 73, 246, 125, 198, 2, 140 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 7, 183, 199, 54, 242, 12, 203, 96, 249, 32, 10, 13, 179, 184, 93, 159, 192, 59, 169, 224, 47, 42, 153, 140, 157, 138, 192, 21, 218, 72, 129, 230, 213, 251, 216, 140, 254, 206, 91, 134, 253, 129, 253, 208, 57, 36, 214, 10, 186, 143, 9, 133, 79, 92, 205, 11, 212, 17, 101, 86, 16, 104, 109, 47 }, new byte[] { 74, 206, 48, 149, 53, 32, 69, 3, 205, 249, 131, 204, 107, 179, 123, 101, 68, 246, 140, 249, 205, 200, 187, 153, 130, 12, 105, 85, 7, 131, 194, 145, 64, 234, 168, 39, 229, 211, 146, 50, 54, 150, 19, 3, 169, 8, 202, 212, 25, 173, 178, 240, 43, 136, 34, 225, 202, 201, 244, 56, 146, 56, 198, 124, 13, 39, 183, 71, 191, 177, 236, 72, 100, 251, 30, 134, 71, 122, 30, 152, 206, 242, 240, 165, 14, 39, 238, 7, 107, 76, 122, 31, 95, 213, 103, 135, 239, 254, 94, 77, 40, 107, 32, 138, 72, 187, 93, 62, 140, 167, 41, 215, 248, 168, 114, 73, 85, 137, 213, 19, 209, 232, 73, 246, 125, 198, 2, 140 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 7, 183, 199, 54, 242, 12, 203, 96, 249, 32, 10, 13, 179, 184, 93, 159, 192, 59, 169, 224, 47, 42, 153, 140, 157, 138, 192, 21, 218, 72, 129, 230, 213, 251, 216, 140, 254, 206, 91, 134, 253, 129, 253, 208, 57, 36, 214, 10, 186, 143, 9, 133, 79, 92, 205, 11, 212, 17, 101, 86, 16, 104, 109, 47 }, new byte[] { 74, 206, 48, 149, 53, 32, 69, 3, 205, 249, 131, 204, 107, 179, 123, 101, 68, 246, 140, 249, 205, 200, 187, 153, 130, 12, 105, 85, 7, 131, 194, 145, 64, 234, 168, 39, 229, 211, 146, 50, 54, 150, 19, 3, 169, 8, 202, 212, 25, 173, 178, 240, 43, 136, 34, 225, 202, 201, 244, 56, 146, 56, 198, 124, 13, 39, 183, 71, 191, 177, 236, 72, 100, 251, 30, 134, 71, 122, 30, 152, 206, 242, 240, 165, 14, 39, 238, 7, 107, 76, 122, 31, 95, 213, 103, 135, 239, 254, 94, 77, 40, 107, 32, 138, 72, 187, 93, 62, 140, 167, 41, 215, 248, 168, 114, 73, 85, 137, 213, 19, 209, 232, 73, 246, 125, 198, 2, 140 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 7, 183, 199, 54, 242, 12, 203, 96, 249, 32, 10, 13, 179, 184, 93, 159, 192, 59, 169, 224, 47, 42, 153, 140, 157, 138, 192, 21, 218, 72, 129, 230, 213, 251, 216, 140, 254, 206, 91, 134, 253, 129, 253, 208, 57, 36, 214, 10, 186, 143, 9, 133, 79, 92, 205, 11, 212, 17, 101, 86, 16, 104, 109, 47 }, new byte[] { 74, 206, 48, 149, 53, 32, 69, 3, 205, 249, 131, 204, 107, 179, 123, 101, 68, 246, 140, 249, 205, 200, 187, 153, 130, 12, 105, 85, 7, 131, 194, 145, 64, 234, 168, 39, 229, 211, 146, 50, 54, 150, 19, 3, 169, 8, 202, 212, 25, 173, 178, 240, 43, 136, 34, 225, 202, 201, 244, 56, 146, 56, 198, 124, 13, 39, 183, 71, 191, 177, 236, 72, 100, 251, 30, 134, 71, 122, 30, 152, 206, 242, 240, 165, 14, 39, 238, 7, 107, 76, 122, 31, 95, 213, 103, 135, 239, 254, 94, 77, 40, 107, 32, 138, 72, 187, 93, 62, 140, 167, 41, 215, 248, 168, 114, 73, 85, 137, 213, 19, 209, 232, 73, 246, 125, 198, 2, 140 } });
        }
    }
}
