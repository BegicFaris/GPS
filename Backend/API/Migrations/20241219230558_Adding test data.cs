using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace GPS.API.Migrations
{
    /// <inheritdoc />
    public partial class Addingtestdata : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 7, 183, 199, 54, 242, 12, 203, 96, 249, 32, 10, 13, 179, 184, 93, 159, 192, 59, 169, 224, 47, 42, 153, 140, 157, 138, 192, 21, 218, 72, 129, 230, 213, 251, 216, 140, 254, 206, 91, 134, 253, 129, 253, 208, 57, 36, 214, 10, 186, 143, 9, 133, 79, 92, 205, 11, 212, 17, 101, 86, 16, 104, 109, 47 }, new byte[] { 74, 206, 48, 149, 53, 32, 69, 3, 205, 249, 131, 204, 107, 179, 123, 101, 68, 246, 140, 249, 205, 200, 187, 153, 130, 12, 105, 85, 7, 131, 194, 145, 64, 234, 168, 39, 229, 211, 146, 50, 54, 150, 19, 3, 169, 8, 202, 212, 25, 173, 178, 240, 43, 136, 34, 225, 202, 201, 244, 56, 146, 56, 198, 124, 13, 39, 183, 71, 191, 177, 236, 72, 100, 251, 30, 134, 71, 122, 30, 152, 206, 242, 240, 165, 14, 39, 238, 7, 107, 76, 122, 31, 95, 213, 103, 135, 239, 254, 94, 77, 40, 107, 32, 138, 72, 187, 93, 62, 140, 167, 41, 215, 248, 168, 114, 73, 85, 137, 213, 19, 209, 232, 73, 246, 125, 198, 2, 140 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 7, 183, 199, 54, 242, 12, 203, 96, 249, 32, 10, 13, 179, 184, 93, 159, 192, 59, 169, 224, 47, 42, 153, 140, 157, 138, 192, 21, 218, 72, 129, 230, 213, 251, 216, 140, 254, 206, 91, 134, 253, 129, 253, 208, 57, 36, 214, 10, 186, 143, 9, 133, 79, 92, 205, 11, 212, 17, 101, 86, 16, 104, 109, 47 }, new byte[] { 74, 206, 48, 149, 53, 32, 69, 3, 205, 249, 131, 204, 107, 179, 123, 101, 68, 246, 140, 249, 205, 200, 187, 153, 130, 12, 105, 85, 7, 131, 194, 145, 64, 234, 168, 39, 229, 211, 146, 50, 54, 150, 19, 3, 169, 8, 202, 212, 25, 173, 178, 240, 43, 136, 34, 225, 202, 201, 244, 56, 146, 56, 198, 124, 13, 39, 183, 71, 191, 177, 236, 72, 100, 251, 30, 134, 71, 122, 30, 152, 206, 242, 240, 165, 14, 39, 238, 7, 107, 76, 122, 31, 95, 213, 103, 135, 239, 254, 94, 77, 40, 107, 32, 138, 72, 187, 93, 62, 140, 167, 41, 215, 248, 168, 114, 73, 85, 137, 213, 19, 209, 232, 73, 246, 125, 198, 2, 140 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 7, 183, 199, 54, 242, 12, 203, 96, 249, 32, 10, 13, 179, 184, 93, 159, 192, 59, 169, 224, 47, 42, 153, 140, 157, 138, 192, 21, 218, 72, 129, 230, 213, 251, 216, 140, 254, 206, 91, 134, 253, 129, 253, 208, 57, 36, 214, 10, 186, 143, 9, 133, 79, 92, 205, 11, 212, 17, 101, 86, 16, 104, 109, 47 }, new byte[] { 74, 206, 48, 149, 53, 32, 69, 3, 205, 249, 131, 204, 107, 179, 123, 101, 68, 246, 140, 249, 205, 200, 187, 153, 130, 12, 105, 85, 7, 131, 194, 145, 64, 234, 168, 39, 229, 211, 146, 50, 54, 150, 19, 3, 169, 8, 202, 212, 25, 173, 178, 240, 43, 136, 34, 225, 202, 201, 244, 56, 146, 56, 198, 124, 13, 39, 183, 71, 191, 177, 236, 72, 100, 251, 30, 134, 71, 122, 30, 152, 206, 242, 240, 165, 14, 39, 238, 7, 107, 76, 122, 31, 95, 213, 103, 135, 239, 254, 94, 77, 40, 107, 32, 138, 72, 187, 93, 62, 140, 167, 41, 215, 248, 168, 114, 73, 85, 137, 213, 19, 209, 232, 73, 246, 125, 198, 2, 140 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 7, 183, 199, 54, 242, 12, 203, 96, 249, 32, 10, 13, 179, 184, 93, 159, 192, 59, 169, 224, 47, 42, 153, 140, 157, 138, 192, 21, 218, 72, 129, 230, 213, 251, 216, 140, 254, 206, 91, 134, 253, 129, 253, 208, 57, 36, 214, 10, 186, 143, 9, 133, 79, 92, 205, 11, 212, 17, 101, 86, 16, 104, 109, 47 }, new byte[] { 74, 206, 48, 149, 53, 32, 69, 3, 205, 249, 131, 204, 107, 179, 123, 101, 68, 246, 140, 249, 205, 200, 187, 153, 130, 12, 105, 85, 7, 131, 194, 145, 64, 234, 168, 39, 229, 211, 146, 50, 54, 150, 19, 3, 169, 8, 202, 212, 25, 173, 178, 240, 43, 136, 34, 225, 202, 201, 244, 56, 146, 56, 198, 124, 13, 39, 183, 71, 191, 177, 236, 72, 100, 251, 30, 134, 71, 122, 30, 152, 206, 242, 240, 165, 14, 39, 238, 7, 107, 76, 122, 31, 95, 213, 103, 135, 239, 254, 94, 77, 40, 107, 32, 138, 72, 187, 93, 62, 140, 167, 41, 215, 248, 168, 114, 73, 85, 137, 213, 19, 209, 232, 73, 246, 125, 198, 2, 140 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 7, 183, 199, 54, 242, 12, 203, 96, 249, 32, 10, 13, 179, 184, 93, 159, 192, 59, 169, 224, 47, 42, 153, 140, 157, 138, 192, 21, 218, 72, 129, 230, 213, 251, 216, 140, 254, 206, 91, 134, 253, 129, 253, 208, 57, 36, 214, 10, 186, 143, 9, 133, 79, 92, 205, 11, 212, 17, 101, 86, 16, 104, 109, 47 }, new byte[] { 74, 206, 48, 149, 53, 32, 69, 3, 205, 249, 131, 204, 107, 179, 123, 101, 68, 246, 140, 249, 205, 200, 187, 153, 130, 12, 105, 85, 7, 131, 194, 145, 64, 234, 168, 39, 229, 211, 146, 50, 54, 150, 19, 3, 169, 8, 202, 212, 25, 173, 178, 240, 43, 136, 34, 225, 202, 201, 244, 56, 146, 56, 198, 124, 13, 39, 183, 71, 191, 177, 236, 72, 100, 251, 30, 134, 71, 122, 30, 152, 206, 242, 240, 165, 14, 39, 238, 7, 107, 76, 122, 31, 95, 213, 103, 135, 239, 254, 94, 77, 40, 107, 32, 138, 72, 187, 93, 62, 140, 167, 41, 215, 248, 168, 114, 73, 85, 137, 213, 19, 209, 232, 73, 246, 125, 198, 2, 140 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 7, 183, 199, 54, 242, 12, 203, 96, 249, 32, 10, 13, 179, 184, 93, 159, 192, 59, 169, 224, 47, 42, 153, 140, 157, 138, 192, 21, 218, 72, 129, 230, 213, 251, 216, 140, 254, 206, 91, 134, 253, 129, 253, 208, 57, 36, 214, 10, 186, 143, 9, 133, 79, 92, 205, 11, 212, 17, 101, 86, 16, 104, 109, 47 }, new byte[] { 74, 206, 48, 149, 53, 32, 69, 3, 205, 249, 131, 204, 107, 179, 123, 101, 68, 246, 140, 249, 205, 200, 187, 153, 130, 12, 105, 85, 7, 131, 194, 145, 64, 234, 168, 39, 229, 211, 146, 50, 54, 150, 19, 3, 169, 8, 202, 212, 25, 173, 178, 240, 43, 136, 34, 225, 202, 201, 244, 56, 146, 56, 198, 124, 13, 39, 183, 71, 191, 177, 236, 72, 100, 251, 30, 134, 71, 122, 30, 152, 206, 242, 240, 165, 14, 39, 238, 7, 107, 76, 122, 31, 95, 213, 103, 135, 239, 254, 94, 77, 40, 107, 32, 138, 72, 187, 93, 62, 140, 167, 41, 215, 248, 168, 114, 73, 85, 137, 213, 19, 209, 232, 73, 246, 125, 198, 2, 140 } });

            migrationBuilder.UpdateData(
                table: "Tickets",
                keyColumn: "Id",
                keyValue: 1,
                column: "QrCode",
                value: new byte[] { 137, 80, 78, 71, 13, 10, 26, 10 });

            migrationBuilder.UpdateData(
                table: "Tickets",
                keyColumn: "Id",
                keyValue: 2,
                column: "QrCode",
                value: new byte[] { 137, 80, 78, 71, 13, 10, 26, 10 });

            migrationBuilder.UpdateData(
                table: "Zones",
                keyColumn: "Id",
                keyValue: 1,
                column: "Name",
                value: "1");

            migrationBuilder.UpdateData(
                table: "Zones",
                keyColumn: "Id",
                keyValue: 2,
                column: "Name",
                value: "2");

            migrationBuilder.UpdateData(
                table: "Zones",
                keyColumn: "Id",
                keyValue: 3,
                column: "Name",
                value: "3");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 118, 153, 65, 36, 50, 227, 71, 12, 109, 198, 149, 177, 208, 179, 31, 163, 138, 137, 161, 130, 128, 239, 146, 99, 219, 254, 210, 71, 59, 96, 63, 240, 251, 179, 150, 211, 59, 94, 186, 93, 136, 66, 239, 75, 32, 204, 178, 187, 220, 210, 39, 182, 116, 239, 91, 112, 59, 119, 70, 13, 7, 218, 41, 134 }, new byte[] { 125, 53, 50, 234, 144, 66, 71, 226, 0, 91, 16, 35, 99, 4, 231, 12, 58, 122, 131, 197, 52, 224, 110, 182, 211, 145, 96, 241, 18, 111, 173, 18, 47, 167, 245, 205, 240, 152, 52, 211, 141, 49, 240, 89, 209, 4, 205, 241, 87, 250, 24, 243, 232, 29, 90, 6, 118, 149, 29, 16, 208, 30, 173, 118, 66, 204, 99, 27, 98, 148, 135, 27, 159, 154, 87, 192, 128, 10, 152, 223, 50, 209, 219, 191, 124, 177, 219, 245, 247, 56, 143, 89, 5, 94, 252, 49, 217, 174, 106, 249, 14, 231, 196, 70, 156, 74, 199, 191, 200, 128, 131, 78, 22, 70, 93, 166, 189, 149, 81, 116, 215, 47, 15, 52, 103, 136, 122, 219 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 118, 153, 65, 36, 50, 227, 71, 12, 109, 198, 149, 177, 208, 179, 31, 163, 138, 137, 161, 130, 128, 239, 146, 99, 219, 254, 210, 71, 59, 96, 63, 240, 251, 179, 150, 211, 59, 94, 186, 93, 136, 66, 239, 75, 32, 204, 178, 187, 220, 210, 39, 182, 116, 239, 91, 112, 59, 119, 70, 13, 7, 218, 41, 134 }, new byte[] { 125, 53, 50, 234, 144, 66, 71, 226, 0, 91, 16, 35, 99, 4, 231, 12, 58, 122, 131, 197, 52, 224, 110, 182, 211, 145, 96, 241, 18, 111, 173, 18, 47, 167, 245, 205, 240, 152, 52, 211, 141, 49, 240, 89, 209, 4, 205, 241, 87, 250, 24, 243, 232, 29, 90, 6, 118, 149, 29, 16, 208, 30, 173, 118, 66, 204, 99, 27, 98, 148, 135, 27, 159, 154, 87, 192, 128, 10, 152, 223, 50, 209, 219, 191, 124, 177, 219, 245, 247, 56, 143, 89, 5, 94, 252, 49, 217, 174, 106, 249, 14, 231, 196, 70, 156, 74, 199, 191, 200, 128, 131, 78, 22, 70, 93, 166, 189, 149, 81, 116, 215, 47, 15, 52, 103, 136, 122, 219 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 118, 153, 65, 36, 50, 227, 71, 12, 109, 198, 149, 177, 208, 179, 31, 163, 138, 137, 161, 130, 128, 239, 146, 99, 219, 254, 210, 71, 59, 96, 63, 240, 251, 179, 150, 211, 59, 94, 186, 93, 136, 66, 239, 75, 32, 204, 178, 187, 220, 210, 39, 182, 116, 239, 91, 112, 59, 119, 70, 13, 7, 218, 41, 134 }, new byte[] { 125, 53, 50, 234, 144, 66, 71, 226, 0, 91, 16, 35, 99, 4, 231, 12, 58, 122, 131, 197, 52, 224, 110, 182, 211, 145, 96, 241, 18, 111, 173, 18, 47, 167, 245, 205, 240, 152, 52, 211, 141, 49, 240, 89, 209, 4, 205, 241, 87, 250, 24, 243, 232, 29, 90, 6, 118, 149, 29, 16, 208, 30, 173, 118, 66, 204, 99, 27, 98, 148, 135, 27, 159, 154, 87, 192, 128, 10, 152, 223, 50, 209, 219, 191, 124, 177, 219, 245, 247, 56, 143, 89, 5, 94, 252, 49, 217, 174, 106, 249, 14, 231, 196, 70, 156, 74, 199, 191, 200, 128, 131, 78, 22, 70, 93, 166, 189, 149, 81, 116, 215, 47, 15, 52, 103, 136, 122, 219 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 118, 153, 65, 36, 50, 227, 71, 12, 109, 198, 149, 177, 208, 179, 31, 163, 138, 137, 161, 130, 128, 239, 146, 99, 219, 254, 210, 71, 59, 96, 63, 240, 251, 179, 150, 211, 59, 94, 186, 93, 136, 66, 239, 75, 32, 204, 178, 187, 220, 210, 39, 182, 116, 239, 91, 112, 59, 119, 70, 13, 7, 218, 41, 134 }, new byte[] { 125, 53, 50, 234, 144, 66, 71, 226, 0, 91, 16, 35, 99, 4, 231, 12, 58, 122, 131, 197, 52, 224, 110, 182, 211, 145, 96, 241, 18, 111, 173, 18, 47, 167, 245, 205, 240, 152, 52, 211, 141, 49, 240, 89, 209, 4, 205, 241, 87, 250, 24, 243, 232, 29, 90, 6, 118, 149, 29, 16, 208, 30, 173, 118, 66, 204, 99, 27, 98, 148, 135, 27, 159, 154, 87, 192, 128, 10, 152, 223, 50, 209, 219, 191, 124, 177, 219, 245, 247, 56, 143, 89, 5, 94, 252, 49, 217, 174, 106, 249, 14, 231, 196, 70, 156, 74, 199, 191, 200, 128, 131, 78, 22, 70, 93, 166, 189, 149, 81, 116, 215, 47, 15, 52, 103, 136, 122, 219 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 118, 153, 65, 36, 50, 227, 71, 12, 109, 198, 149, 177, 208, 179, 31, 163, 138, 137, 161, 130, 128, 239, 146, 99, 219, 254, 210, 71, 59, 96, 63, 240, 251, 179, 150, 211, 59, 94, 186, 93, 136, 66, 239, 75, 32, 204, 178, 187, 220, 210, 39, 182, 116, 239, 91, 112, 59, 119, 70, 13, 7, 218, 41, 134 }, new byte[] { 125, 53, 50, 234, 144, 66, 71, 226, 0, 91, 16, 35, 99, 4, 231, 12, 58, 122, 131, 197, 52, 224, 110, 182, 211, 145, 96, 241, 18, 111, 173, 18, 47, 167, 245, 205, 240, 152, 52, 211, 141, 49, 240, 89, 209, 4, 205, 241, 87, 250, 24, 243, 232, 29, 90, 6, 118, 149, 29, 16, 208, 30, 173, 118, 66, 204, 99, 27, 98, 148, 135, 27, 159, 154, 87, 192, 128, 10, 152, 223, 50, 209, 219, 191, 124, 177, 219, 245, 247, 56, 143, 89, 5, 94, 252, 49, 217, 174, 106, 249, 14, 231, 196, 70, 156, 74, 199, 191, 200, 128, 131, 78, 22, 70, 93, 166, 189, 149, 81, 116, 215, 47, 15, 52, 103, 136, 122, 219 } });

            migrationBuilder.UpdateData(
                table: "MyAppUsers",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 118, 153, 65, 36, 50, 227, 71, 12, 109, 198, 149, 177, 208, 179, 31, 163, 138, 137, 161, 130, 128, 239, 146, 99, 219, 254, 210, 71, 59, 96, 63, 240, 251, 179, 150, 211, 59, 94, 186, 93, 136, 66, 239, 75, 32, 204, 178, 187, 220, 210, 39, 182, 116, 239, 91, 112, 59, 119, 70, 13, 7, 218, 41, 134 }, new byte[] { 125, 53, 50, 234, 144, 66, 71, 226, 0, 91, 16, 35, 99, 4, 231, 12, 58, 122, 131, 197, 52, 224, 110, 182, 211, 145, 96, 241, 18, 111, 173, 18, 47, 167, 245, 205, 240, 152, 52, 211, 141, 49, 240, 89, 209, 4, 205, 241, 87, 250, 24, 243, 232, 29, 90, 6, 118, 149, 29, 16, 208, 30, 173, 118, 66, 204, 99, 27, 98, 148, 135, 27, 159, 154, 87, 192, 128, 10, 152, 223, 50, 209, 219, 191, 124, 177, 219, 245, 247, 56, 143, 89, 5, 94, 252, 49, 217, 174, 106, 249, 14, 231, 196, 70, 156, 74, 199, 191, 200, 128, 131, 78, 22, 70, 93, 166, 189, 149, 81, 116, 215, 47, 15, 52, 103, 136, 122, 219 } });

            migrationBuilder.UpdateData(
                table: "Tickets",
                keyColumn: "Id",
                keyValue: 1,
                column: "QrCode",
                value: new byte[0]);

            migrationBuilder.UpdateData(
                table: "Tickets",
                keyColumn: "Id",
                keyValue: 2,
                column: "QrCode",
                value: new byte[0]);

            migrationBuilder.UpdateData(
                table: "Zones",
                keyColumn: "Id",
                keyValue: 1,
                column: "Name",
                value: "Zone one");

            migrationBuilder.UpdateData(
                table: "Zones",
                keyColumn: "Id",
                keyValue: 2,
                column: "Name",
                value: "Zone two");

            migrationBuilder.UpdateData(
                table: "Zones",
                keyColumn: "Id",
                keyValue: 3,
                column: "Name",
                value: "Zone three");
        }
    }
}
